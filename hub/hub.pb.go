// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hub.proto

package hub

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status int32

const (
	Status_UNKNOWN Status = 0
	Status_OK      Status = 1
	Status_INVALID Status = 2
	Status_FAILED  Status = 3
)

var Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "OK",
	2: "INVALID",
	3: "FAILED",
}
var Status_value = map[string]int32{
	"UNKNOWN": 0,
	"OK":      1,
	"INVALID": 2,
	"FAILED":  3,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_hub_d9c40c2251177a4c, []int{0}
}

type RegisterRequest struct {
	TerminalID           string   `protobuf:"bytes,1,opt,name=terminalID" json:"terminalID,omitempty"`
	AgentID              string   `protobuf:"bytes,2,opt,name=agentID" json:"agentID,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	WSize                *Winsize `protobuf:"bytes,4,opt,name=WSize" json:"WSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_hub_d9c40c2251177a4c, []int{0}
}
func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(dst, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetTerminalID() string {
	if m != nil {
		return m.TerminalID
	}
	return ""
}

func (m *RegisterRequest) GetAgentID() string {
	if m != nil {
		return m.AgentID
	}
	return ""
}

func (m *RegisterRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *RegisterRequest) GetWSize() *Winsize {
	if m != nil {
		return m.WSize
	}
	return nil
}

// type Winsize struct {
// 	Rows uint16 // ws_row: Number of rows (in cells)
// 	Cols uint16 // ws_col: Number of columns (in cells)
// 	X    uint16 // ws_xpixel: Width in pixels
// 	Y    uint16 // ws_ypixel: Height in pixels
// }
// Winsize describes the terminal size.
type Winsize struct {
	Rows                 uint32   `protobuf:"varint,1,opt,name=Rows" json:"Rows,omitempty"`
	Cols                 uint32   `protobuf:"varint,2,opt,name=Cols" json:"Cols,omitempty"`
	X                    uint32   `protobuf:"varint,3,opt,name=X" json:"X,omitempty"`
	Y                    uint32   `protobuf:"varint,4,opt,name=Y" json:"Y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Winsize) Reset()         { *m = Winsize{} }
func (m *Winsize) String() string { return proto.CompactTextString(m) }
func (*Winsize) ProtoMessage()    {}
func (*Winsize) Descriptor() ([]byte, []int) {
	return fileDescriptor_hub_d9c40c2251177a4c, []int{1}
}
func (m *Winsize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Winsize.Unmarshal(m, b)
}
func (m *Winsize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Winsize.Marshal(b, m, deterministic)
}
func (dst *Winsize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Winsize.Merge(dst, src)
}
func (m *Winsize) XXX_Size() int {
	return xxx_messageInfo_Winsize.Size(m)
}
func (m *Winsize) XXX_DiscardUnknown() {
	xxx_messageInfo_Winsize.DiscardUnknown(m)
}

var xxx_messageInfo_Winsize proto.InternalMessageInfo

func (m *Winsize) GetRows() uint32 {
	if m != nil {
		return m.Rows
	}
	return 0
}

func (m *Winsize) GetCols() uint32 {
	if m != nil {
		return m.Cols
	}
	return 0
}

func (m *Winsize) GetX() uint32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Winsize) GetY() uint32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type RegisterResponse struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	SessionId            uint64   `protobuf:"varint,3,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterResponse) Reset()         { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()    {}
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_hub_d9c40c2251177a4c, []int{2}
}
func (m *RegisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponse.Unmarshal(m, b)
}
func (m *RegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponse.Marshal(b, m, deterministic)
}
func (dst *RegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponse.Merge(dst, src)
}
func (m *RegisterResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterResponse.Size(m)
}
func (m *RegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponse proto.InternalMessageInfo

func (m *RegisterResponse) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *RegisterResponse) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *RegisterResponse) GetSessionId() uint64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

type WinsizeRequest struct {
	WSize                *Winsize `protobuf:"bytes,2,opt,name=WSize" json:"WSize,omitempty"`
	SessionId            uint64   `protobuf:"varint,5,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WinsizeRequest) Reset()         { *m = WinsizeRequest{} }
func (m *WinsizeRequest) String() string { return proto.CompactTextString(m) }
func (*WinsizeRequest) ProtoMessage()    {}
func (*WinsizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_hub_d9c40c2251177a4c, []int{3}
}
func (m *WinsizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WinsizeRequest.Unmarshal(m, b)
}
func (m *WinsizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WinsizeRequest.Marshal(b, m, deterministic)
}
func (dst *WinsizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WinsizeRequest.Merge(dst, src)
}
func (m *WinsizeRequest) XXX_Size() int {
	return xxx_messageInfo_WinsizeRequest.Size(m)
}
func (m *WinsizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WinsizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WinsizeRequest proto.InternalMessageInfo

func (m *WinsizeRequest) GetWSize() *Winsize {
	if m != nil {
		return m.WSize
	}
	return nil
}

func (m *WinsizeRequest) GetSessionId() uint64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

type WinsizeResponse struct {
	Status               Status   `protobuf:"varint,1,opt,name=Status,enum=hub.Status" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WinsizeResponse) Reset()         { *m = WinsizeResponse{} }
func (m *WinsizeResponse) String() string { return proto.CompactTextString(m) }
func (*WinsizeResponse) ProtoMessage()    {}
func (*WinsizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_hub_d9c40c2251177a4c, []int{4}
}
func (m *WinsizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WinsizeResponse.Unmarshal(m, b)
}
func (m *WinsizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WinsizeResponse.Marshal(b, m, deterministic)
}
func (dst *WinsizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WinsizeResponse.Merge(dst, src)
}
func (m *WinsizeResponse) XXX_Size() int {
	return xxx_messageInfo_WinsizeResponse.Size(m)
}
func (m *WinsizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WinsizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WinsizeResponse proto.InternalMessageInfo

func (m *WinsizeResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_UNKNOWN
}

func init() {
	proto.RegisterType((*RegisterRequest)(nil), "hub.RegisterRequest")
	proto.RegisterType((*Winsize)(nil), "hub.Winsize")
	proto.RegisterType((*RegisterResponse)(nil), "hub.RegisterResponse")
	proto.RegisterType((*WinsizeRequest)(nil), "hub.WinsizeRequest")
	proto.RegisterType((*WinsizeResponse)(nil), "hub.WinsizeResponse")
	proto.RegisterEnum("hub.Status", Status_name, Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TerminalClient is the client API for Terminal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TerminalClient interface {
	Resize(ctx context.Context, in *WinsizeRequest, opts ...grpc.CallOption) (*WinsizeResponse, error)
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
}

type terminalClient struct {
	cc *grpc.ClientConn
}

func NewTerminalClient(cc *grpc.ClientConn) TerminalClient {
	return &terminalClient{cc}
}

func (c *terminalClient) Resize(ctx context.Context, in *WinsizeRequest, opts ...grpc.CallOption) (*WinsizeResponse, error) {
	out := new(WinsizeResponse)
	err := c.cc.Invoke(ctx, "/hub.Terminal/Resize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *terminalClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/hub.Terminal/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TerminalServer is the server API for Terminal service.
type TerminalServer interface {
	Resize(context.Context, *WinsizeRequest) (*WinsizeResponse, error)
	Register(context.Context, *RegisterRequest) (*RegisterResponse, error)
}

func RegisterTerminalServer(s *grpc.Server, srv TerminalServer) {
	s.RegisterService(&_Terminal_serviceDesc, srv)
}

func _Terminal_Resize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WinsizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerminalServer).Resize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hub.Terminal/Resize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerminalServer).Resize(ctx, req.(*WinsizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Terminal_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerminalServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hub.Terminal/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerminalServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Terminal_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hub.Terminal",
	HandlerType: (*TerminalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Resize",
			Handler:    _Terminal_Resize_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _Terminal_Register_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hub.proto",
}

func init() { proto.RegisterFile("hub.proto", fileDescriptor_hub_d9c40c2251177a4c) }

var fileDescriptor_hub_d9c40c2251177a4c = []byte{
	// 403 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0xd1, 0x8e, 0xd2, 0x40,
	0x14, 0x75, 0x0a, 0x5b, 0xe0, 0xb2, 0xdd, 0x6d, 0x46, 0x4d, 0x9a, 0x4d, 0x34, 0x9b, 0x9a, 0x18,
	0xe2, 0x03, 0x0f, 0x90, 0xe0, 0x33, 0x58, 0x8d, 0x0d, 0x58, 0xc8, 0xa0, 0x02, 0x4f, 0x86, 0xda,
	0x09, 0x9d, 0xa4, 0x74, 0xb0, 0x33, 0x8d, 0x86, 0x3f, 0xf0, 0xaf, 0xcd, 0x4c, 0xa7, 0x28, 0x4d,
	0x7c, 0xbb, 0x73, 0xce, 0xed, 0xb9, 0xe7, 0xdc, 0x5e, 0xe8, 0xa5, 0x65, 0x3c, 0x3c, 0x15, 0x5c,
	0x72, 0xdc, 0x4a, 0xcb, 0xd8, 0xff, 0x8d, 0xe0, 0x9e, 0xd0, 0x03, 0x13, 0x92, 0x16, 0x84, 0xfe,
	0x28, 0xa9, 0x90, 0xf8, 0x25, 0x80, 0xa4, 0xc5, 0x91, 0xe5, 0xfb, 0x2c, 0x0c, 0x3c, 0xf4, 0x88,
	0x06, 0x3d, 0xf2, 0x0f, 0x82, 0x3d, 0xe8, 0xec, 0x0f, 0x34, 0x97, 0x61, 0xe0, 0x59, 0x9a, 0xac,
	0x9f, 0x9a, 0x49, 0x92, 0x82, 0x0a, 0xe1, 0xb5, 0x0c, 0x53, 0x3d, 0xb1, 0x0f, 0x37, 0x9b, 0x35,
	0x3b, 0x53, 0xaf, 0xfd, 0x88, 0x06, 0xfd, 0xd1, 0xed, 0x50, 0xf9, 0xd8, 0xb0, 0x5c, 0xb0, 0x33,
	0x25, 0x15, 0xe5, 0x7f, 0x82, 0x8e, 0x41, 0x30, 0x86, 0x36, 0xe1, 0x3f, 0x85, 0x1e, 0xee, 0x10,
	0x5d, 0x2b, 0xec, 0x1d, 0xcf, 0x84, 0x9e, 0xe9, 0x10, 0x5d, 0xe3, 0x5b, 0x40, 0x5b, 0x3d, 0xca,
	0x21, 0x68, 0xab, 0x5e, 0x3b, 0x3d, 0xc0, 0x21, 0x68, 0xe7, 0xef, 0xc0, 0xfd, 0x9b, 0x4c, 0x9c,
	0x78, 0x2e, 0xb4, 0x6e, 0xca, 0x85, 0x34, 0xa1, 0x74, 0xad, 0xb0, 0x13, 0x2f, 0x64, 0xad, 0xab,
	0x6a, 0xfc, 0x02, 0x40, 0x50, 0x21, 0x18, 0xcf, 0xbf, 0xb1, 0x44, 0x0f, 0x68, 0x93, 0x9e, 0x41,
	0xc2, 0xc4, 0x5f, 0xc3, 0x5d, 0xed, 0xdd, 0xec, 0xec, 0x92, 0xcf, 0xfa, 0x6f, 0xbe, 0x86, 0xe8,
	0x4d, 0x53, 0x74, 0x02, 0xf7, 0x17, 0x51, 0x63, 0xf7, 0x15, 0xd8, 0x6b, 0xb9, 0x97, 0x65, 0xb5,
	0x88, 0xbb, 0x51, 0x5f, 0xcb, 0x56, 0x10, 0x31, 0xd4, 0x9b, 0x49, 0xdd, 0x84, 0xfb, 0xd0, 0xf9,
	0x12, 0xcd, 0xa3, 0xe5, 0x26, 0x72, 0x9f, 0x60, 0x1b, 0xac, 0xe5, 0xdc, 0x45, 0x0a, 0x0c, 0xa3,
	0xaf, 0xd3, 0x45, 0x18, 0xb8, 0x16, 0x06, 0xb0, 0x3f, 0x4c, 0xc3, 0xc5, 0xfb, 0xc0, 0x6d, 0x8d,
	0x7e, 0x41, 0xf7, 0xb3, 0xf9, 0xa9, 0x78, 0x0c, 0x36, 0xa1, 0x7a, 0xf3, 0x4f, 0xaf, 0x9c, 0x57,
	0xe9, 0x1e, 0x9e, 0x5d, 0x83, 0xc6, 0xdd, 0x5b, 0xe8, 0xd6, 0x0b, 0xc6, 0x55, 0x47, 0xe3, 0x92,
	0x1e, 0x9e, 0x37, 0xd0, 0xea, 0xc3, 0xd9, 0x6b, 0xf0, 0x0e, 0x4c, 0x2a, 0xea, 0x3b, 0x3f, 0x0e,
	0x45, 0x4a, 0xb3, 0x8c, 0x1d, 0x05, 0x53, 0xcd, 0xb3, 0xee, 0xc7, 0x32, 0x5e, 0xa9, 0xfb, 0x5c,
	0xa1, 0xd8, 0xd6, 0x87, 0x3a, 0xfe, 0x13, 0x00, 0x00, 0xff, 0xff, 0x69, 0xe6, 0xac, 0x1b, 0xb5,
	0x02, 0x00, 0x00,
}
